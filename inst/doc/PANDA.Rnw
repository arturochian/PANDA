%\VignetteIndexEntry{PANDA Vignette}
%\VignetteDepends{GO.db, cluster}
%\VignetteKeywords{PANDA}
%\VignettePackage{PANDA}

\documentclass{article}
\usepackage{graphicx}
\usepackage{hyperref}
\usepackage{amsmath}
\usepackage{natbib}

\pagestyle{myheadings}

\setlength{\topmargin}{0in}
\setlength{\textheight}{8in}
\setlength{\textwidth}{6.5in}
\setlength{\oddsidemargin}{0in}
\setlength{\evensidemargin}{0in}

\title{User manual for PANDA: Preferential Attachment based common Neighbor Distribution derived functional Associations} 
\author{Hua Li  and  Pan Tong}
\date{2014-10-20}

\usepackage{Sweave}
\begin{document}

\SweaveOpts{prefix.string=PANDA}

\maketitle

\tableofcontents


<<echo=FALSE>>=
options(width=80)
options(continue=' ')
@ 

\section{Introduction}

This file gives a brief introduction on the functions used in the R package of PANDA (preferential-attachment based common neighbor distribution derived associations). PANDA is designed to perform the following tasks in protein-protein interaction (PPI) networks: (1) identify significantly functionally associated protein pairs, (2) predict GO and KEGG terms for proteins, (3) make a cluster of proteins based on the significant protein pairs, (4) identify subclusters whose members are enriched in KEGG-pathways. For other types of biological networks, (1) and (3) can still be performed. For more details on PANDA, please refer to "PAND: a distribution to identify functional linkage from networks with preferential attachment property", or consult Hua Li (kaixinsjtu@hotmail.com).


\section{A Quick Example}

    The first step is to load the package from the library.

<<loadLibrary>>=
library(PANDA)
@ 

Then we load the example data shipped with this package.

<<>>=
data(GENE2GOtopLite)
data(GENE2KEGG)
data(KEGGID2NAME)
data(dfPPI)
@

Here we use a PPI network (dfPPI) consisting of 2360 proteins and 5355 interactions as an example to demonstrate the capability of PANDA.The GENE2GOtopLite and GENE2KEGG are examples of GO and KEGG annotations. KEGGID2NAME maps KEGG pathway ID to KEGG pathway names. We first apply PAND to the PPI network to derive functional links between protein by using the function "SignificantPairs" (set pvalue=TRUE if you prefer to rank protein pairs by p-values, otherwise by probabilities):

<<>>=
OrderAll=SignificantPairs(PPIdb=dfPPI)
head(OrderAll)
@

Based on the p-values (or probabilities) of the significant protein pairs obtained above, we can perform agglomerative hierarchical clustering (using the unweighted group average) for proteins of all significant pairs.This function returns an object in the class "dendrogram". If "Plot=TRUE" is specified, it will also plot the dendrogram.

<<>>=
dendMap=ProteinCluster(Pfile=OrderAll, Plot=TRUE, TextScaler=50) 
@

The significant protein pairs generated by the function "SignificantPairs" constituted a new network, with which we can make further functional predictions. We use the functions "GOpredict" and "KEGGpredict" to perform functional enrichment analysis (p-values were calculated with Fisher’s exact test) among a protein’s significant partners to predict GO terms and KEGG pathways for the protein: 

<<>>=
GP=GOpredict(Pfile=OrderAll, PPIdb=dfPPI, Gene2Annotation=GENE2GOtopLite, p_value=0.001)
head(GP)
@

<<>>=
KP=KEGGpredict(Pfile=OrderAll, PPIdb=dfPPI, Gene2Annotation=GENE2KEGG, p_value=0.001, IDtoNAME=KEGGID2NAME)
KP
@

We use the following function to identify subclusters (from the cluster generated by "ProteinCluster") whose members are significantly enriched in any KEGG pathway (if KGremove=TURE, "hsa05200" and "hsa01100" will be excluded from this analysis as they are too broad):

<<>>=
SignificantSubcluster(Dendrogram=dendMap, Gene2Annotation=GENE2KEGG, PPIdb=dfPPI, KGremove=TRUE, SPoint=1, EPoint=9.7)
@


\section{File Location and Session Info}
<<sessionInfo>>=
sessionInfo()
@ 



\end{document}
